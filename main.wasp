app ToDoApp {
  wasp: { version: "^0.11.0" },
  title: "ToDo App",

  auth: {
    userEntity: User,
    externalAuthEntity: SocialLogin,
    methods: {
      usernameAndPassword: {},
      gitHub: {},
      google: {},
      // and other methods!!!
    },
    onAuthFailedRedirectTo: "/login",
  },

 dependencies: [
    ("@chakra-ui/react", "2.7.1"),
    ("react-rewards", "2.0.4"),
    ("react-icons", "4.7.1"),
    ("@emotion/styled", "11.10.5"),
    ("@emotion/react", "11.10.5"),
    ("framer-motion", "6.0"),
  ],
}

// -<>-- 🚗 DB ENTITIES 🐝 --<>- //

entity Task {=psl
  id          Int     @id @default(autoincrement())
  description String
  isDone      Boolean @default(false)
psl=}

entity User {=psl
  id                        Int           @id @default(autoincrement())
  username                  String        @unique
  password                  String
  externalAuthAssociations  SocialLogin[]
psl=}

entity SocialLogin {=psl
  id          Int       @id @default(autoincrement())
  provider    String
  providerId  String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  createdAt   DateTime  @default(now())
  @@unique([provider, providerId, userId])
psl=}

// -<>-- ⛑ OPERATIONS 🐝 --<>- //

query getAllTasks {
  fn: import { getAllTasks } from "@server/queries.js",
  entities: [Task]
}

action createTask {
  fn: import { createTask } from "@server/actions.js",
  entities: [Task]
}

action updateTask {
  fn: import { updateTask } from "@server/actions.js",
  entities: [Task]
}

action deleteTask {
  fn: import { deleteTask } from "@server/actions.js",
  entities: [Task]
}

// -<>-- 🚗 ROUTES 🐝 --<>- //

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import Main from "@client/MainPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { LoginPage } from "@client/LoginPage"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import { SignupPage } from "@client/SignupPage"
}



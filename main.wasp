app ToDoApp {
  wasp: { version: "^0.11.0" },
  title: "ToDo App",

  auth: {
    userEntity: User,
    externalAuthEntity: SocialLogin,
    methods: {
      google: {},
      gitHub: {},
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
  },

 dependencies: [
    ("@chakra-ui/react", "2.7.1"),
    ("react-rewards", "2.0.4"),
    ("react-icons", "4.7.1"),
  ],
}

entity Task {=psl
    id          Int     @id @default(autoincrement())
    description String
    isDone      Boolean @default(false)
psl=}





entity User {=psl
    id                        Int           @id @default(autoincrement())
    username                  String        @unique
    password                  String
    externalAuthAssociations  SocialLogin[]
psl=}

entity SocialLogin {=psl
  id          Int       @id @default(autoincrement())
  provider    String
  providerId  String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  createdAt   DateTime  @default(now())
  @@unique([provider, providerId, userId])
psl=}

// -<>-- üöó ROUTES üêù --<>- //

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import Main from "@client/MainPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { LoginPage } from "@client/Login"
}

route RegisterRoute { path: "/register", to: RegisterPage }
page RegisterPage {
  component: import Register from "@client/components/Register"
}


